// <auto-generated />
using System;
using Dwapi.Prep.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Dwapi.Prep.Infrastructure.Migrations
{
    [DbContext(typeof(PrepContext))]
    [Migration("20220629193826_PatientPrepNUPI")]
    partial class PatientPrepNUPI
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Dwapi.Prep.Core.Domain.Cargo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Items")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ManifestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RefId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ManifestId");

                    b.ToTable("Cargoes");
                });

            modelBuilder.Entity("Dwapi.Prep.Core.Domain.Docket", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Instance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RefId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Dockets");
                });

            modelBuilder.Entity("Dwapi.Prep.Core.Domain.Facility", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Emr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MasterFacilityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(120)")
                        .HasMaxLength(120);

                    b.Property<Guid?>("RefId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SiteCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SnapshotDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SnapshotSiteCode")
                        .HasColumnType("int");

                    b.Property<int?>("SnapshotVersion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MasterFacilityId");

                    b.ToTable("Facilities");
                });

            modelBuilder.Entity("Dwapi.Prep.Core.Domain.Manifest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateArrived")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateLogged")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("EmrId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmrName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmrSetup")
                        .HasColumnType("int");

                    b.Property<DateTime?>("End")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FacilityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Recieved")
                        .HasColumnType("int");

                    b.Property<Guid?>("RefId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Sent")
                        .HasColumnType("int");

                    b.Property<Guid?>("Session")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SiteCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Start")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("StatusDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Tag")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FacilityId");

                    b.ToTable("Manifests");
                });

            modelBuilder.Entity("Dwapi.Prep.Core.Domain.MasterFacility", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("County")
                        .HasColumnType("nvarchar(120)")
                        .HasMaxLength(120);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(120)")
                        .HasMaxLength(120);

                    b.Property<Guid?>("RefId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("SnapshotDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SnapshotSiteCode")
                        .HasColumnType("int");

                    b.Property<int?>("SnapshotVersion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MasterFacilities");
                });

            modelBuilder.Entity("Dwapi.Prep.Core.Domain.PatientPrep", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClientPreviouslyonPrep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("County")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountyofBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateExtracted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateLastUsedPrev")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateStartedPrEPattransferringfacility")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date_Last_Modified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DatefirstinitiatedinPrepCare")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateofBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Emr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FacilityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FacilityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HtsNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Inschool")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeyPopulationType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandMark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaritalStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NUPI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PatientPk")
                        .HasColumnType("int");

                    b.Property<string>("PopulationType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PrepEnrollmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PrepNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrevPrepReg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Processed")
                        .HasColumnType("bit");

                    b.Property<string>("Project")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QueueId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RefId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReferralPoint")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Refferedfrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SiteCode")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StatusDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubCounty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransferFromFacility")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransferIn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TransferInDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ward")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FacilityId");

                    b.ToTable("PrepPatients");
                });

            modelBuilder.Entity("Dwapi.Prep.Core.Domain.PrepAdverseEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdverseEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdverseEventActionTaken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdverseEventCause")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdverseEventClinicalOutcome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("AdverseEventEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AdverseEventIsPregnant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdverseEventRegimen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("AdverseEventStartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateExtracted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date_Last_Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Emr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FacilityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FacilityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PatientPk")
                        .HasColumnType("int");

                    b.Property<string>("PrepNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Processed")
                        .HasColumnType("bit");

                    b.Property<string>("Project")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QueueId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RefId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Severity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SiteCode")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StatusDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("VisitDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FacilityId");

                    b.ToTable("PrepAdverseEvents");
                });

            modelBuilder.Entity("Dwapi.Prep.Core.Domain.PrepBehaviourRisk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClientAssessments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientRisk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientWillingToTakePrep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateExtracted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date_Last_Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Emr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FacilityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FacilityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FirstEstablishPartnerStatus")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("HIVPartnerARTStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HIVPartnerCCCnumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HtsNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsHIVPositivePartnerCurrentonART")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsPartnerHighrisk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MonthsknownHIVSerodiscordant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberofchildrenWithPartner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartnerARTRisk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PartnerEnrolledtoCCC")
                        .HasColumnType("datetime2");

                    b.Property<int>("PatientPk")
                        .HasColumnType("int");

                    b.Property<string>("PrEPDeclineReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrepNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Processed")
                        .HasColumnType("bit");

                    b.Property<string>("Project")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QueueId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RefId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReferralToOtherPrevServices")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RiskReductionEducationOffered")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SexPartnerHIVStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SexWithoutCondom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SiteCode")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StatusDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("VisitDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("VisitID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FacilityId");

                    b.ToTable("PrepBehaviourRisks");
                });

            modelBuilder.Entity("Dwapi.Prep.Core.Domain.PrepCareTermination", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateExtracted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfLastPrepDose")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date_Last_Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Emr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExitDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExitReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FacilityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FacilityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HtsNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PatientPk")
                        .HasColumnType("int");

                    b.Property<string>("PrepNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Processed")
                        .HasColumnType("bit");

                    b.Property<string>("Project")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QueueId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RefId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SiteCode")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StatusDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FacilityId");

                    b.ToTable("PrepCareTerminations");
                });

            modelBuilder.Entity("Dwapi.Prep.Core.Domain.PrepLab", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateExtracted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date_Last_Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Emr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FacilityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FacilityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HtsNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PatientPk")
                        .HasColumnType("int");

                    b.Property<string>("PrepNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Processed")
                        .HasColumnType("bit");

                    b.Property<string>("Project")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QueueId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RefId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("SampleDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SiteCode")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StatusDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TestName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TestResult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TestResultDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("VisitID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FacilityId");

                    b.ToTable("PrepLabs");
                });

            modelBuilder.Entity("Dwapi.Prep.Core.Domain.PrepPharmacy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateExtracted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date_Last_Modified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DispenseDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Duration")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Emr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FacilityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FacilityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HtsNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PatientPk")
                        .HasColumnType("int");

                    b.Property<string>("PrepNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Processed")
                        .HasColumnType("bit");

                    b.Property<string>("Project")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QueueId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RefId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RegimenPrescribed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SiteCode")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StatusDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("VisitID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FacilityId");

                    b.ToTable("PrepPharmacys");
                });

            modelBuilder.Entity("Dwapi.Prep.Core.Domain.PrepVisit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdherenceDone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdherenceOutcome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdherenceReasons")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("BMI")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BirthDefects")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BloodPressure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Breastfeeding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Circumcised")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClinicalNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CondomsIssued")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContraindicationsPrep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateExtracted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date_Last_Modified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EDD")
                        .HasColumnType("datetime2");

                    b.Property<string>("Emr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EncounterId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FPMethods")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FacilityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FacilityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FamilyPlanningStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Height")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("HepatitisBPositiveResult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HepatitisCPositiveResult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HtsNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LMP")
                        .HasColumnType("datetime2");

                    b.Property<string>("MenopausalStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MonthsPrescribed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NextAppointment")
                        .HasColumnType("datetime2");

                    b.Property<int>("PatientPk")
                        .HasColumnType("int");

                    b.Property<string>("PlanningToGetPregnant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PregnancyEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PregnancyEnded")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PregnancyOutcome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PregnancyPlanned")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PregnantAtThisVisit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrepNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrepPrescribed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrepTreatmentPlan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Processed")
                        .HasColumnType("bit");

                    b.Property<string>("Project")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QueueId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reasonfornotgivingnextappointment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RefId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RegimenPrescribed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("STIScreening")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("STISymptoms")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("STITreated")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SiteCode")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StatusDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SymptomsAcuteHIV")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Temperature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tobegivennextappointment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TreatedForHepB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TreatedForHepC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VMMCReferral")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VaccinationForHepBStarted")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VaccinationForHepCStarted")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("VisitDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VisitID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("FacilityId");

                    b.ToTable("PrepVisits");
                });

            modelBuilder.Entity("Dwapi.Prep.Core.Domain.Subscriber", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuthCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocketId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RefId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DocketId");

                    b.ToTable("Subscribers");
                });

            modelBuilder.Entity("Dwapi.Prep.Core.Domain.Cargo", b =>
                {
                    b.HasOne("Dwapi.Prep.Core.Domain.Manifest", null)
                        .WithMany("Cargoes")
                        .HasForeignKey("ManifestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dwapi.Prep.Core.Domain.Facility", b =>
                {
                    b.HasOne("Dwapi.Prep.Core.Domain.MasterFacility", null)
                        .WithMany("Mentions")
                        .HasForeignKey("MasterFacilityId");
                });

            modelBuilder.Entity("Dwapi.Prep.Core.Domain.Manifest", b =>
                {
                    b.HasOne("Dwapi.Prep.Core.Domain.Facility", null)
                        .WithMany("Manifests")
                        .HasForeignKey("FacilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dwapi.Prep.Core.Domain.PatientPrep", b =>
                {
                    b.HasOne("Dwapi.Prep.Core.Domain.Facility", null)
                        .WithMany("PrepPatients")
                        .HasForeignKey("FacilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dwapi.Prep.Core.Domain.PrepAdverseEvent", b =>
                {
                    b.HasOne("Dwapi.Prep.Core.Domain.Facility", null)
                        .WithMany("PrepAdverseEvents")
                        .HasForeignKey("FacilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dwapi.Prep.Core.Domain.PrepBehaviourRisk", b =>
                {
                    b.HasOne("Dwapi.Prep.Core.Domain.Facility", null)
                        .WithMany("PrepBehaviourRisks")
                        .HasForeignKey("FacilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dwapi.Prep.Core.Domain.PrepCareTermination", b =>
                {
                    b.HasOne("Dwapi.Prep.Core.Domain.Facility", null)
                        .WithMany("PrepCareTerminations")
                        .HasForeignKey("FacilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dwapi.Prep.Core.Domain.PrepLab", b =>
                {
                    b.HasOne("Dwapi.Prep.Core.Domain.Facility", null)
                        .WithMany("PrepLabs")
                        .HasForeignKey("FacilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dwapi.Prep.Core.Domain.PrepPharmacy", b =>
                {
                    b.HasOne("Dwapi.Prep.Core.Domain.Facility", null)
                        .WithMany("PrepPharmacys")
                        .HasForeignKey("FacilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dwapi.Prep.Core.Domain.PrepVisit", b =>
                {
                    b.HasOne("Dwapi.Prep.Core.Domain.Facility", null)
                        .WithMany("PrepVisits")
                        .HasForeignKey("FacilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dwapi.Prep.Core.Domain.Subscriber", b =>
                {
                    b.HasOne("Dwapi.Prep.Core.Domain.Docket", null)
                        .WithMany("Subscribers")
                        .HasForeignKey("DocketId");
                });
#pragma warning restore 612, 618
        }
    }
}
